concept: ~saludos [Hola hola Buenas buenas Que_tal que_tal]
concept: ~que [que]
concept: ~ser [ser eres Es sabes_sobre]
concept: ~hacer [hacer haces hace]
concept: ~quien [quien quienes]
concept: ~articulos [El La los las Un una unos unas]
concept: ~preposiciones [A ante bajo cabe con contra De desde En entre hacia hasta para por segun sin So sobre tras]
concept: ~ejemplo [ejemplo ejemplar modelo prototipo patron]
concept: ~afirmacion [si por_favor efectivamente evidentemente sin_duda]
concept: ~negacion [no nones nanai naranjas quia ca]
concept: ~profesor [profesor profe professor]

# For some reason two-letter words  must be capitalized

concept: ~dudas [que como hago]

topic: ~entrada keep repeat []
t: Buenas, ¿puedo ayudarte?

u: (~saludos)
    Hola, soy Duke y estoy aqui para ayudarte.

# Simple, generic questions

u: (~ser {~articulos} ~profesor)
    No, soy un bot asistente para ayudarte a encontrar respuestas.
    # TODO: Add rejoinder to offer contact info.

u: (~quien ~ser)
    Me llamo $bot y soy un bot asistente para ayudarte con tus preguntas.

u: (~que ~hacer)
    Mi funcion es ayudarte a encontrar respuestas
    
topic: ~preguntas keep repeat [~dudas]
# Generic questions
#! que es un for?

u: COMIENZO (~que ~ser {~articulos} * > _*-1 >) # This semi-weird pattern will return the last word of the sentence
    $pregunta='_0
    \[ sendMaia content $pregunta \]


topic: ~ejemplos keep repeat [~ejemplo]
    
u: (~ejemplo ~preposiciones _*1)
    $pregunta=_0
    \[ sendmaia example _0 \]
   
u: EJEMPLO (~ejemplo $pregunta)
    \[ sendmaia example $pregunta \]
    
u: (~ejemplo)
    $ejemplo=1
    De que quieres el ejemplo?
    # si pide ejemplo, pero no dice de qué, pregunto

u: ($ejemplo ~preposiciones _*1 >)
        $pregunta=_0
        $ejemplo=null
        ^reuse(EJEMPLO)

topic: ~maiaResponses keep repeat [maiaResponse]
# Process the maia responses

u: (maiaResponse content _*)
    '_0 \[sendMaia $pregunta resource \]
    # Ask for the link to show in the frame

u: (maiaResponse resource _*)
    \[ resource '_0 \] \[ sendMaia $pregunta links\_to \]
u: (maiaResponse links\_to _*)
    Tambien puedes preguntarme sobre '_0

u: (maiaResponse gambit _*1)
    $pregunta_gambit=_0
    Puedo explicarte $$pregunta_gambit, te sirve?
u: ($pregunta_gambit ~afirmacion)
    $pregunta=$pregunta_gambit
    $pregunta_gambit=null
    ^reuse(COMIENZO)
    # Asigno el valor a $pregunta, y utilizo su respuesta.

u: ($pregunta_gambit ~negacion)
    Me temo que no puedo ayudarte. Por que no me preguntas sobre alguna otra cosa?

u:(maiaResponse example _*)
    $ejemplo=null
    '_0

u:($ejemplo maiaResponse unknown)
    $ejemplo=null
    Lo siento, no tengo ningun ejemplo sobre $pregunta

u: (maiaResponse unknown)
    Lo siento, no se nada sobre $pregunta \[ sendMaia gambit $pregunta \]
    # Busco lo más aproximado en solr.

topic: ~jasonpatterns keep repeat [java]
# Jason backwards-compatibility patterns

#! [java sample iteracion]
u: (\[ java sample _* \])
    Si quieres un ejemplo sobre _0, puedes pedirlo.
    a: (~afirmacion)
        ^reuse(EJEMPLO)

#! [java recommend random]
u: (\[ java recommend random \])
    [sendMaia pickRandom]
    a:(maiaResponse label _*)
        $recom=_0
        ^reuse(RECOMENDACION)

#! [java recommend iteracion]
u: RECOMENDACION (\[ java recommend _* \])
    $recom=_0
    Hoy te recomiendo repasar $recom.

#! [java test iteracion]
u: TEST ( \[ java test _* \])
    \[ sendMaia example _* \]
    a: ( maiaResponse example _* )
        Para repasar, seguro que puedes decir a que se refiere este concepto: _0
        b: (_*)
            \[sendmaia assert affirm(concept _0)\]
            c: (\[ java testok _* \] )
                Exacto, se trataba de _0.
            c: (\[ java testfail _* \])
                Incorrecto, se trataba de _0.
                
    a: (maiaResponse unknown)
   

